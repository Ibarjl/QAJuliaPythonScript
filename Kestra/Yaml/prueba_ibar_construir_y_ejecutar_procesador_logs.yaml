id: _prueba_ibar_construir_y_ejecutar_procesador_logs
namespace: core.gt

inputs:
  - id: id_ejecucion_a_procesar
    type: STRING
    description: "ID de la ejecución de Kestra cuyos logs se van a procesar."
    required: true
  - id: IP_Nodo
    type: STRING
    description: "IP del nodo donde se construirán y ejecutarán los contenedores Docker."
    required: true
  - id: ssh_username 
    type: STRING
    description: "Nombre de usuario para la conexión SSH al nodo remoto."
    required: true
  - id: ssh_password 
    type: STRING
    description: "Contraseña para la conexión SSH al nodo remoto."
    required: true

tasks:
  - id: log_ssh_credentials_info
    type: io.kestra.plugin.core.log.Log
    message: "Usando credenciales SSH para {{ inputs.IP_Nodo }} con usuario {{ inputs.ssh_username }}"

  - id: upload_docker_files
    type: io.kestra.plugin.fs.ssh.Upload
    host: "{{ inputs.IP_Nodo }}"
    username: "{{ inputs.ssh_username }}"
    password: "{{ inputs.ssh_password }}"
    from:
      - Dockerfile: "{{ read('Dockerfile') }}" 
    to: "/tmp/kestra_julia_processor_{{ execution.id }}"
    description: "Subiendo Dockerfile al nodo remoto para la construcción de la imagen."

  - id: construir_imagen_julia_processor_remote
    type: io.kestra.plugin.fs.ssh.Command
    host: "{{ inputs.IP_Nodo }}"
    username: "{{ inputs.ssh_username }}"
    password: "{{ inputs.ssh_password }}"
    commands:
      - "cd /tmp/kestra_julia_processor_{{ execution.id }} && docker build -t kestra-julia-processor:{{ execution.id }} ."
    description: "Construyendo la imagen Docker en el nodo remoto."

  - id: obtener_logs_de_ejecucion
    type: io.kestra.plugin.core.http.Request
    uri: "http://localhost:8080/api/v1/executions/{{ inputs.id_ejecucion_a_procesar }}/logs"
    method: GET
    description: "Obteniendo los logs de la ejecución de Kestra."

  - id: procesar_logs_con_julia_remote
    type: io.kestra.plugin.fs.ssh.Command
    host: "{{ inputs.IP_Nodo }}"
    username: "{{ inputs.ssh_username }}"
    password: "{{ inputs.ssh_password }}"
    commands:
      - |
        docker run --rm \
        -e LOGS_JSON_DATA="{{ outputs.obtener_logs_de_ejecucion.body | escapeJson }}" \
        -v /home/int/script_ibar.jl:/app \
        -v /tmp/kestra_julia_processor_{{ execution.id }}:/tmp_output \
        kestra-julia-processor:{{ execution.id }} julia /app/logs_de_kestra.jl
    description: "Ejecutando el script de Julia en el contenedor Docker remoto."

  - id: download_log_plot
    type: io.kestra.plugin.fs.ssh.Download
    host: "{{ inputs.IP_Nodo }}"
    username: "{{ inputs.ssh_username }}"
    password: "{{ inputs.ssh_password }}"
    from: "/tmp/kestra_julia_processor_{{ execution.id }}/distribucion_logs.png"
    to: "{{ outputDir }}/distribucion_logs.png"
    description: "Descargando el gráfico de distribución de logs generado desde el nodo remoto."

outputs:
  - id: logs_capturados
    type: STRING
    value: "{{ outputs.obtener_logs_de_ejecucion.body }}"
  - id: resultado_del_procesamiento_julia
    type: STRING
    value: "{{ outputs.procesar_logs_con_julia_remote.stdout }}"
  - id: log_distribution_plot
    type: FILE
    value: "{{ outputs.download_log_plot.uri }}"
